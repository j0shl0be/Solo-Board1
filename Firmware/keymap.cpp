#include "keymap.h"
#include <Adafruit_NeoPixel.h>
#include "slider.h"
#include "usb.h"

const uint8_t TOGGLE_UP_ROW = 0;
const uint8_t TOGGLE_UP_COL = 2;

const uint8_t TOGGLE_DOWN_ROW = 2;
const uint8_t TOGGLE_DOWN_COL = 2;

// ------------------------ Layer configurations ---------------------------
// Forward declarations of slider callbacks
static void slider_volume_callback(uint8_t percent);
static void slider_brightness_callback(uint8_t percent);

// 8x8 icons for layers
static const uint8_t ICON_DEFAULT_8[] = {
  0b11111111, 0b10000001, 0b10111101, 0b10100101,
  0b10100101, 0b10111101, 0b10000001, 0b11111111
};
static const uint8_t ICON_FKEYS_8[] = {
  0b11111111, 0b10000001, 0b10111001, 0b10101001,
  0b10111001, 0b10101001, 0b10000001, 0b11111111
};
static const uint8_t ICON_MEDIA_8[] = {
  0b11111111, 0b10000001, 0b10111101, 0b10100101,
  0b10100101, 0b10111101, 0b10000001, 0b11111111
};

// 32x32 icons for slider functions
static const uint32_t ICON_SLIDER_VOL_32[] = {

  0b00000000000000010000000001000000,
  0b00000000000000110000000001100000,
  0b00000000000001110000000001100000,
  0b00000000000011110000000000110000,
  0b00000000000111110000001000110000,
  0b00000000001111110000001100011000,
  0b00000000011111110000001100011000,
  0b00000000111111110000001110011100,
  0b00000001111111110001000110001100,
  0b11111111111111110011000110001100,
  0b11111111111111110011100011001100,
  0b11111111111111110001100011001100,
  0b11111111111111110001100011001110,
  0b11111111111111110001110011001110,
  0b11111111111111110000110011000110,
  0b11111111111111110000110011000110,
  0b11111111111111110000110011000110,
  0b11111111111111110000110011000110,
  0b11111111111111110001110011001110,
  0b11111111111111110001100011001110,
  0b11111111111111110001100011001100,
  0b11111111111111110011100011001100,
  0b11111111111111110011000110001100,
  0b00000001111111110001000110001100,
  0b00000000111111110000001110011100,
  0b00000000011111110000001100011000,
  0b00000000001111110000001100011000,
  0b00000000000111110000001000110000,
  0b00000000000011110000000000110000,
  0b00000000000001110000000001100000,
  0b00000000000000110000000001100000,
  0b00000000000000010000000001000000
};
static const uint32_t ICON_SLIDER_BRIGHT_32[] = {
  0b00000000000000011100000000000000,
  0b00000000011000011000011000000000,
  0b00000000111000011000011100000000,
  0b00000000011100011000011000000000,
  0b00001000001100000000110000010000,
  0b00011100000000000000000000111000,
  0b00011110000000000000000001111000,
  0b00000110000011111111000001100000,
  0b00000000001111111111110000000000,
  0b00000000011111111111111000000000,
  0b01110000011111111111111100001111,
  0b11111000111111111111111100011111,
  0b00000000111111111111111100000000,
  0b00000000111111111111111110000000,
  0b00000000111111111111111110000000,
  0b00111000111111111111111100011100,
  0b11111000111111111111111100011111,
  0b01100000011111111111111100000111,
  0b00000000011111111111111000000000,
  0b00000000001111111111110000000000,
  0b00001110000111111111110001100000,
  0b00011110000111111111100001111000,
  0b00011100000011111111000000111000,
  0b00000000000011111111000000000000,
  0b00000000000000000000000000000000,
  0b00000000000011111111000000000000,
  0b00000000000011111111000000000000,
  0b00000000000000000000000000000000,
  0b00000000000011111111100000000000,
  0b00000000000000000000000000000000,
  0b00000000000001111110000000000000,
  0b00000000000000011100000000000000
};

//32x32 Layer Icons
static const uint32_t ICON_KEYBOARD_DEFAULT_32[] = {
  0b00000000000000000000000000000000,
  0b00000000000000000000000000000000,
  0b00000000000000000000000000000000,
  0b00011111111111111110000000000000,
  0b11111111111111111111110000000000,
  0b00011111000000000111111110000000,
  0b00011111000000000001111111000000,
  0b00011111000000000000011111100000,
  0b00011111000000000000001111110000,
  0b00011111000000000000000111111000,
  0b00011111000000000000000111111000,
  0b00011111000000000000000011111100,
  0b00011111000000000000000011111100,
  0b00011111000000000000000001111100,
  0b00011111000000000000000001111100,
  0b00011111000000000000000001111110,
  0b00011111000000000000000001111110,
  0b00011111000000000000000001111100,
  0b00011111000000000000000001111100,
  0b00011111000000000000000001111100,
  0b00011111000000000000000011111100,
  0b00011111000000000000000011111000,
  0b00011111000000000000000111111000,
  0b00011111000000000000000111110000,
  0b00011111000000000000001111100000,
  0b00011111000000000000011111000000,
  0b00011111000000000001111110000000,
  0b00011111100000001111111000000000,
  0b11111111111111111111100000000000,
  0b11111111111111111000000000000000,
  0b00000000000000000000000000000000,
  0b00000000000000000000000000000000
};
static const uint32_t ICON_KEYBOARD_SECOND_32[] = {
  0b00000000000000000000000000000000,
  0b00000000000011111111100000000000,
  0b00000000111111111111111110000000,
  0b00000011111110001111111111100000,
  0b00000111100000000000111111000000,
  0b00001111000000000000001110000000,
  0b00011111000000000000000100000000,
  0b00111110000000000000000000000000,
  0b00111111000000000000000000000000,
  0b00111111100000000000000000000000,
  0b00011111110000000000000000000000,
  0b00011111111100000000000000000000,
  0b00001111111111100000000000000000,
  0b00000111111111111100000000000000,
  0b00000001111111111111100000000000,
  0b00000000001111111111111000000000,
  0b00000000000001111111111110000000,
  0b00000000000000001111111111100000,
  0b00000000000000000001111111110000,
  0b00000000000000000000011111110000,
  0b00000000000000000000001111111000,
  0b00000000000000000000000111111000,
  0b00000000000000000000000111111000,
  0b00110000000000000000000011111000,
  0b00111000000000000000000111110000,
  0b00111100000000000000000111110000,
  0b00111110000000000000001111100000,
  0b00111111110000000000111111000000,
  0b00111111111111111111111110000000,
  0b00001111111111111111111000000000,
  0b00000001111111111111000000000000,
  0b00000000000000000000000000000000
};

static const uint32_t ICON_KEYBOARD_FUNCTION_32[] = {
  0b00000000000000000000000000000000,
  0b00000000000000000000000000000000,
  0b00011111111111111111111111111000,
  0b00011111111111111111111111111000,
  0b00000000111110000000000111111000,
  0b00000000111110000000000001111000,
  0b00000000111110000000000000111000,
  0b00000000111110000000000000111000,
  0b00000000111110000000000000011000,
  0b00000000111110000000000000011000,
  0b00000000111110000000010000011000,
  0b00000000111110000000110000001000,
  0b00000000111110000000110000000000,
  0b00000000111110000000110000000000,
  0b00000000111110000001110000000000,
  0b00000000111110000111110000000000,
  0b00000000111111111111110000000000,
  0b00000000111110000111110000000000,
  0b00000000111110000001110000000000,
  0b00000000111110000000110000000000,
  0b00000000111110000000110000000000,
  0b00000000111110000000110000000000,
  0b00000000111110000000010000000000,
  0b00000000111110000000000000000000,
  0b00000000111110000000000000000000,
  0b00000000111110000000000000000000,
  0b00000000111110000000000000000000,
  0b00000000111110000000000000000000,
  0b00000000111110000000000000000000,
  0b00000000111110000000000000000000,
  0b00011111111111111100000000000000,
  0b00011111111111111100000000000000
};

static const uint32_t ICON_KEYBOARD_MEDIA_32[] = {
  0b00000000000000000000000000000000,
  0b00000000000000000000000000000000,
  0b01111111000000000000000011111110,
  0b00001111000000000000000011110000,
  0b00001111100000000000000111110000,
  0b00001111100000000000000111110000,
  0b00001111100000000000001111110000,
  0b00001111110000000000001111110000,
  0b00001101110000000000001101110000,
  0b00001101111000000000011101110000,
  0b00001101111000000000011001110000,
  0b00001100111000000000011001110000,
  0b00001100111100000000111001110000,
  0b00001100011100000000110001110000,
  0b00001100011100000000110001110000,
  0b00001100011110000001110001110000,
  0b00001100001110000001100001110000,
  0b00001100001111000011100001110000,
  0b00001100001111000011100001110000,
  0b00001100000111000011000001110000,
  0b00001100000111100111000001110000,
  0b00001100000111100110000001110000,
  0b00001100000011100110000001110000,
  0b00001100000011111110000001110000,
  0b00001100000001111100000001110000,
  0b00001100000001111100000001110000,
  0b00001100000001111100000001110000,
  0b00001100000000111000000001110000,
  0b00001100000000111000000001110000,
  0b00111111000000111000001111111100,
  0b01111111100000010000001111111110,
  0b00000000000000000000000000000000
};

static const uint32_t ICON_KEYBOARD_NOT_AVAILABLE_32[] = {
  0b00000000000000000000000000000000, 
  0b00000000000011111111000000000000, 
  0b00000000011111111111111000000000, 
  0b00000001111110000001111110000000, 
  0b00000011110000000000011111000000, 
  0b00000111100000000000000111100000, 
  0b00001111000000000000000011110000, 
  0b00011111100000000000000001111000, 
  0b00011101110000000000000000111000, 
  0b00111000111000000000000000011100, 
  0b00110000011100000000000000001100, 
  0b00110000001110000000000000001100, 
  0b01110000000111000000000000001110, 
  0b01100000000011100000000000000110, 
  0b01100000000001110000000000000110, 
  0b01100000000000111000000000000110, 
  0b01100000000000011100000000000110, 
  0b01100000000000001110000000000110, 
  0b01100000000000000111000000000110, 
  0b01110000000000000011100000001110, 
  0b00110000000000000001110000001100, 
  0b00110000000000000000111000011100, 
  0b00111000000000000000011100011100, 
  0b00011100000000000000001110111000, 
  0b00011110000000000000000111111000, 
  0b00001111000000000000000011110000, 
  0b00000111100000000000000111100000, 
  0b00000011110000000000011111000000, 
  0b00000001111110000001111110000000, 
  0b00000000011111111111111000000000, 
  0b00000000000011111111000000000000, 
  0b00000000000000000000000000000000
};

const LayerConfig layerConfigs[NUM_LAYERS] = {
  // ---------- LAYER 0: Default shortcuts ---------------------------------
  {
    // Keycodes
    {
      { { KEY_B, KEY_MOD_LSHIFT, 0, 0, "B" }, { KEY_C, KEY_MOD_LSHIFT, 0, 0, "C" }, { KEY_D, KEY_MOD_LSHIFT, 0, 0, "D" } },  // b, c, d
      { { KEY_A, KEY_MOD_LSHIFT, 0, 0, "A" }, { KEY_E, KEY_MOD_LSHIFT, 0, 0, "E" }, { KEY_F, KEY_MOD_LSHIFT, 0, 0, "F" } },  // a, e, f
      { { KEY_I, KEY_MOD_LSHIFT, 0, 0, "I" }, { KEY_H, KEY_MOD_LSHIFT, 0, 0, "H" }, { KEY_G, KEY_MOD_LSHIFT, 0, 0, "G" } }   // i, h, g
    },
    SLIDER_VOLUME,  // Slider function
    0x0050FF,       // Blue color
    "DEFAULT",
    ICON_KEYBOARD_DEFAULT_32,
    32,
    ICON_SLIDER_VOL_32,
    32,
    slider_volume_callback,
    ICON_KEYBOARD_NOT_AVAILABLE_32,
    32,
    "D"
   },
  // ---------- LAYER 1: Second shortcuts ---------------------------------
  {
    // Keycodes
    {
      { { KEY_B, KEY_MOD_LSHIFT, 0, 0, "B" }, { KEY_C, KEY_MOD_LSHIFT, 0, 0, "C" }, { KEY_D, KEY_MOD_LSHIFT, 0, 0, "D" } },  // b, c, d
      { { KEY_A, KEY_MOD_LSHIFT, 0, 0, "A" }, { KEY_E, KEY_MOD_LSHIFT, 0, 0, "E" }, { KEY_F, KEY_MOD_LSHIFT, 0, 0, "F" } },  // a, e, f
      { { KEY_I, KEY_MOD_LSHIFT, 0, 0, "I" }, { KEY_H, KEY_MOD_LSHIFT, 0, 0, "H" }, { KEY_G, KEY_MOD_LSHIFT, 0, 0, "G" } }   // i, h, g
    },
    SLIDER_VOLUME,  // Slider function
    0x0050FF,       // Blue color
    "SECOND",
    ICON_KEYBOARD_SECOND_32,
    32,
    ICON_SLIDER_VOL_32,
    32,
    slider_volume_callback,
    ICON_KEYBOARD_NOT_AVAILABLE_32,
    32,
    "S"
   },
  // ---------- LAYER 2: F‑Keys -------------------------------------------
  {
    // Keycodes
    {
      { { KEY_TAB, KEY_MOD_LALT, 0, 0, "Alt+Tab" }, { KEY_F14, 0, 0, 0, "F14" }, { KEY_F15, 0, 0, 0, "F15" } },
      { { KEY_F16, 0, 0, 0, "F16" }, { KEY_F17, 0, 0, 0, "F17" }, { KEY_F18, 0, 0, 0, "F18" } },
      { { KEY_F19, 0, 0, 0, "F19" }, { KEY_F20, 0, 0, 0, "F20" }, { KEY_F21, 0, 0, 0, "F21" } } },
    SLIDER_VOLUME,  // Slider function
    0xFF0064,       // Magenta color
    "F-KEYS",
    ICON_KEYBOARD_FUNCTION_32,
    32,
    ICON_SLIDER_VOL_32,
    32,
    slider_volume_callback,
    ICON_KEYBOARD_NOT_AVAILABLE_32,
    32,
    "F"
   },

  // ---------- LAYER 3: Media controls -----------------------------------
  {
    // Keycodes
    {
      { { KEY_MEDIA_PLAYPAUSE, 0, 0, 0, "Play/Pause" }, { KEY_MEDIA_NEXTSONG, 0, 0, 0, "Next" }, { KEY_MEDIA_PREVIOUSSONG, 0, 0, 0, "Prev" } },  // Media play/pause, next, previous
      { { KEY_MEDIA_VOLUMEUP, 0, 0, 0, "Vol+" }, { KEY_MEDIA_VOLUMEDOWN, 0, 0, 0, "Vol-" }, { KEY_MEDIA_MUTE, 0, 0, 0, "Mute" } },         // Volume up, down, mute
      { { KEY_MEDIA_PLAYPAUSE, 0, 0, 0, "Play/Pause" }, { KEY_MEDIA_NEXTSONG, 0, 0, 0, "Next" }, { KEY_MEDIA_PREVIOUSSONG, 0, 0, 0, "Prev" } }   // Media controls
    },
    SLIDER_BRIGHTNESS,  // Slider function
    0x00FF00,           // Green color
    "MEDIA",  
    ICON_KEYBOARD_MEDIA_32,
    32,
    ICON_SLIDER_BRIGHT_32,
    32,
    slider_brightness_callback,
    NULL,
    0,
    "M"
   }
};

// ------------------------ Helper functions -------------------------------
const LayerConfig* getCurrentLayerConfig() {
  return &layerConfigs[curLayer];
}

KeyStruct getLayerKeycode(uint8_t row, uint8_t col) {
  return layerConfigs[curLayer].keycodes[row][col];
}

SliderFunction getCurrentSliderFunction() {
  return layerConfigs[curLayer].sliderFunc;
}

uint32_t getCurrentLedColor() {
  return layerConfigs[curLayer].ledColor;
}

const char* getCurrentDisplayName() {
  return layerConfigs[curLayer].displayName;
}

const void* getCurrentLayerIcon() {
  return layerConfigs[curLayer].icon;
}

const void* getCurrentSliderIcon() {
  return layerConfigs[curLayer].sliderIcon;
}

const void* getCurrentNotAvailableIcon() {
  return layerConfigs[curLayer].notAvailableIcon;
}

uint8_t getCurrentLayerIconSize() {
  return layerConfigs[curLayer].iconSize;
}

uint8_t getCurrentSliderIconSize() {
  return layerConfigs[curLayer].sliderIconSize;
}

uint8_t getCurrentNotAvailableIconSize() {
  return layerConfigs[curLayer].notAvailableIconSize;
}

SliderCallback getCurrentSliderCallback() {
  return layerConfigs[curLayer].sliderCallback;
}

const char* getCurrentDisplayLetter() {
  return layerConfigs[curLayer].displayLetter;
}



// ------------------------ Layer management functions ---------------------
void switchToLayer(Layer newLayer) {
  if (isValidLayer(newLayer)) {
    // Clear any currently pressed keys when changing layers
    usb_clear_keyboard();
    curLayer = newLayer;
  }
}

Layer getCurrentLayer() {
  return curLayer;
}

bool isValidLayer(Layer layer) {
  return layer < NUM_LAYERS;
}

const char* getSliderFunctionName(SliderFunction func) {
  switch (func) {
    case SLIDER_VOLUME:
      return "Volume";
    case SLIDER_BRIGHTNESS:
      return "Brightness";
    default:
      return "Unknown";
  }
}

// ------------------------ Slider callbacks --------------------------------
static void slider_volume_callback(uint8_t percent) {
  if (serialConnected) {
    Serial.print("VOL:");
    Serial.println(percent);
    Serial.flush();
  }
}

static void slider_brightness_callback(uint8_t percent) {
  if (percent > 100) percent = 100;
  uint8_t newBrightness = percent;
  if (newBrightness != globalBrightness) {
    update_global_brightness(newBrightness);
  }
}
